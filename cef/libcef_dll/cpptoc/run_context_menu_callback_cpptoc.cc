// Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
#if (defined ENABLE_CEF) && (ENABLE_CEF == 1)
#include "libcef_dll/cpptoc/run_context_menu_callback_cpptoc.h"


namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void CEF_CALLBACK run_context_menu_callback_cont(
    struct _cef_run_context_menu_callback_t* self, int command_id,
    cef_event_flags_t event_flags) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self)
    return;

  // Execute
  CefRunContextMenuCallbackCppToC::Get(self)->Continue(
      command_id,
      event_flags);
}

void CEF_CALLBACK run_context_menu_callback_cancel(
    struct _cef_run_context_menu_callback_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self)
    return;

  // Execute
  CefRunContextMenuCallbackCppToC::Get(self)->Cancel();
}

}  // namespace


// CONSTRUCTOR - Do not edit by hand.

CefRunContextMenuCallbackCppToC::CefRunContextMenuCallbackCppToC() {
  GetStruct()->cont = run_context_menu_callback_cont;
  GetStruct()->cancel = run_context_menu_callback_cancel;
}

template<> CefRefPtr<CefRunContextMenuCallback> CefCppToC<CefRunContextMenuCallbackCppToC,
    CefRunContextMenuCallback, cef_run_context_menu_callback_t>::UnwrapDerived(
    CefWrapperType type, cef_run_context_menu_callback_t* s) {
  NOTREACHED() << "Unexpected class type: " << type;
  return NULL;
}

#ifndef NDEBUG
template<> base::AtomicRefCount CefCppToC<CefRunContextMenuCallbackCppToC,
    CefRunContextMenuCallback, cef_run_context_menu_callback_t>::DebugObjCt =
    0;
#endif

template<> CefWrapperType CefCppToC<CefRunContextMenuCallbackCppToC,
    CefRunContextMenuCallback, cef_run_context_menu_callback_t>::kWrapperType =
    WT_RUN_CONTEXT_MENU_CALLBACK;
#endif
