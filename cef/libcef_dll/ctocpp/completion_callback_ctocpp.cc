// Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
#if (defined ENABLE_CEF) && (ENABLE_CEF == 1)
#include "libcef_dll/ctocpp/completion_callback_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

void CefCompletionCallbackCToCpp::OnComplete() {
  cef_completion_callback_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, on_complete))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->on_complete(_struct);
}


// CONSTRUCTOR - Do not edit by hand.

CefCompletionCallbackCToCpp::CefCompletionCallbackCToCpp() {
}

template<> cef_completion_callback_t* CefCToCpp<CefCompletionCallbackCToCpp,
    CefCompletionCallback, cef_completion_callback_t>::UnwrapDerived(
    CefWrapperType type, CefCompletionCallback* c) {
  NOTREACHED() << "Unexpected class type: " << type;
  return NULL;
}

#ifndef NDEBUG
template<> base::AtomicRefCount CefCToCpp<CefCompletionCallbackCToCpp,
    CefCompletionCallback, cef_completion_callback_t>::DebugObjCt = 0;
#endif

template<> CefWrapperType CefCToCpp<CefCompletionCallbackCToCpp,
    CefCompletionCallback, cef_completion_callback_t>::kWrapperType =
    WT_COMPLETION_CALLBACK;
#endif
